{
  "name": "stream-array",
  "version": "1.1.2",
  "description": "Pipe an Array through Node.js streams",
  "dependencies": {
    "readable-stream": "~2.1.0"
  },
  "devDependencies": {
    "concat-stream": "~1.5.0",
    "tape": "~4.5.0"
  },
  "scripts": {
    "test": "./node_modules/.bin/tape ./test/*",
    "coverage": "covert ./test/*"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/mimetnet/node-stream-array"
  },
  "bugs": {
    "url": "https://github.com/mimetnet/node-stream-array/issues"
  },
  "homepage": "https://github.com/mimetnet/node-stream-array",
  "keywords": [
    "array",
    "readable",
    "stream",
    "pipe"
  ],
  "author": {
    "name": "Matthew I. Metnetsky",
    "email": "matthew@cowarthill.com"
  },
  "license": "MIT",
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "testling": {
    "files": "test/*.js",
    "browsers": [
      "ie/8..latest",
      "firefox/3.5",
      "firefox/latest",
      "firefox/nightly",
      "chrome/10",
      "chrome/latest",
      "chrome/canary",
      "opera/12..latest",
      "opera/next",
      "safari/5.1..latest",
      "ipad/6.0..latest",
      "iphone/6.0..latest",
      "android-browser/4.2..latest"
    ]
  },
  "engines": {
    "node": ">= 0.8"
  },
  "readme": "# stream-array\n\nPipe an Array through Node.js [Streams][12]. This is rather useful for testing\nother streams.\n\n[![npm version][1]][2]\n[![build status][3]][4]\n[![dependencies][5]][6]\n[![devDependencies][7]][8]\n[![Inch CI][16]][17]\n\n[//]: [![testling][9]][10]\n\n\n## Usage\n\n```js\nvar streamify = require('stream-array'),\n    os = require('os');\n\nstreamify(['1', '2', '3', os.EOL]).pipe(process.stdout);\n```\n\n\n## API\n\n#### streamify(Array)\nThe result of [require][13] is a 'function()' that when invoked, will return a\n[Readable][11] [Stream][12].\n\n```\nvar streamify = require('stream-array');\n```\n\nThe source array can contain any type as it is assumed that the receiving\nstream can handle it. Each element in the array will be [pushed][14] into the\n[piped][15] stream, **without** modifying the source array.\n\n```\nvar readable = streamify(['Hello', new Buffer('World')]);\n```\n\nThis [Stream][12] will [push][14] each element of the source array into the\n[piped][15] array.\n\n```\nreadable(['1', '2', '3', os.EOL]).pipe(process.stdout);\n```\n\n```\n123\\n\n```\n\n## Install\n\n```sh\nnpm install stream-array\n```\n\n  [1]: https://badge.fury.io/js/stream-array.svg\n  [2]: https://badge.fury.io/js/stream-array\n  [3]: https://api.travis-ci.org/mimetnet/node-stream-array.svg\n  [4]: https://travis-ci.org/mimetnet/node-stream-array\n  [5]: https://david-dm.org/mimetnet/node-stream-array.svg\n  [6]: https://david-dm.org/mimetnet/node-stream-array\n  [7]: https://david-dm.org/mimetnet/node-stream-array/dev-status.svg?#info=devDependencies\n  [8]: https://david-dm.org/mimetnet/node-stream-array/#info=devDependencies\n  [//]: https://ci.testling.com/mimetnet/node-stream-array.png\n  [//]: https://ci.testling.com/mimetnet/node-stream-array\n  [11]: http://nodejs.org/api/stream.html#stream_class_stream_readable\n  [12]: http://nodejs.org/api/stream.html#stream_stream\n  [13]: http://nodejs.org/api/globals.html#globals_require\n  [14]: https://nodejs.org/api/stream.html#stream_readable_push_chunk_encoding\n  [15]: https://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n  [16]: https://inch-ci.org/github/mimetnet/node-stream-array.svg?branch=master\n  [17]: http://inch-ci.org/github/mimetnet/node-stream-array\n\n## License\n\n[MIT License](https://github.com/mimetnet/node-stream-array/blob/master/LICENSE)\n",
  "readmeFilename": "README.md",
  "_id": "stream-array@1.1.2",
  "_from": "stream-array@^1.0.1"
}
